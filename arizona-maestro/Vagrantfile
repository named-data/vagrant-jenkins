# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 2.4.0"

authorized_keys = [
  # Jenkins controller public key
  "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIG21+L2op3VAN+Te+X78FUIBmmHSFN61hh0TkmF2PatW jenkins@ndn-jenkins",
]

$centos_provisioning = <<~'EOF'
  # Do not disable IPv6
  sed -i -ne '/\<disable_ipv6\>/!p; $a net.ipv6.conf.all.disable_ipv6 = 0' /etc/sysctl.conf
  # Uninstall firewalld because it interferes with NFD's unit tests
  dnf -y remove firewalld
  # Upgrade everything and install what we need
  dnf -y upgrade
  dnf -y install git java-21-openjdk-headless nano
  # Cleanup
  dnf -y autoremove
EOF

$debian11_provisioning = <<~'EOF'
  # Do not disable IPv6
  sed -i -ne '/\<disable_ipv6\>/!p; $a net.ipv6.conf.all.disable_ipv6 = 0' /etc/sysctl.conf
  # Respect the DNS servers acquired via DHCP
  sed -i -Ee '/dns-nameserver /d' /etc/network/interfaces
  ifdown eth0
  ifup eth0
  # Use the correct NTP servers
  echo 'NTP=ntp1.cs.arizona.edu ntp2.cs.arizona.edu' >>/etc/systemd/timesyncd.conf
  systemctl reload-or-restart systemd-timesyncd.service
  # Upgrade everything and install what we need
  export DEBIAN_FRONTEND=noninteractive
  apt-get -qq update
  apt-get -qy dist-upgrade
  apt-get -qyV install git openjdk-17-jre-headless nano
  # Cleanup
  apt-get -qy autoremove
  apt-get -qy clean
EOF

$debian12_provisioning = <<~'EOF'
  # Upgrade everything and install what we need
  export DEBIAN_FRONTEND=noninteractive
  apt-get -qq update
  apt-get -qy dist-upgrade
  apt-get -qyV install git openjdk-17-jre-headless nano
  # Cleanup
  apt-get -qy autoremove
  apt-get -qy clean
EOF

$ubuntu22_provisioning = <<~'EOF'
  # Do not disable IPv6
  sed -i -ne '/\<disable_ipv6\>/!p; $a net.ipv6.conf.all.disable_ipv6 = 0' /etc/sysctl.conf
  # Respect the DNS servers acquired via DHCP and disable DNSSEC
  sed -i -Ee '/nameservers:|addresses:/d' /etc/netplan/01-netcfg.yaml
  netplan apply
  sed -i -Ee 's/^DNS(SEC)?=/#&/' /etc/systemd/resolved.conf
  systemctl reload-or-restart systemd-resolved.service
  # Use a faster mirror
  sed -i -Ee 's,//mirrors\.edge\.kernel\.org,//mirror.arizona.edu,' /etc/apt/sources.list
  # Upgrade everything and install what we need
  export DEBIAN_FRONTEND=noninteractive
  apt-get -qq update
  apt-get -qy dist-upgrade
  apt-get -qyV install git openjdk-21-jre-headless nano
  # Cleanup
  apt-get -qy autoremove
  apt-get -qy clean
EOF

$ubuntu24_provisioning = <<~'EOF'
  # Use a faster mirror
  sed -i -Ee '/^URIs:/s,//archive\.ubuntu\.com,//mirror.arizona.edu,' /etc/apt/sources.list.d/ubuntu.sources
  # Upgrade everything and install what we need
  export DEBIAN_FRONTEND=noninteractive
  apt-get -qyU dist-upgrade
  apt-get -qyV install git openjdk-21-jre-headless nano
  # Cleanup
  apt-get -qy autoremove
  apt-get -qy clean
EOF

agents = [
  [31890, "centos9",          "generic/centos9s",     "vm1",  $centos_provisioning],
  [31891, "centos9",          "generic/centos9s",     "vm2",  $centos_provisioning],

  [31810, "debian11-i386",    "generic/debian11",     "vm1",  $debian11_provisioning],
  [31811, "debian11-i386",    "generic/debian11",     "vm2",  $debian11_provisioning],

  [31870, "debian12",         "bento/debian-12",      "vm1",  $debian12_provisioning],
  [31871, "debian12",         "bento/debian-12",      "vm2",  $debian12_provisioning],

  [31880, "ubuntu22.04",      "generic/ubuntu2204",   "vm2",  $ubuntu22_provisioning],
  [31881, "ubuntu22.04",      "generic/ubuntu2204",   "vm1",  $ubuntu22_provisioning],

  [31840, "ubuntu24.04",      "bento/ubuntu-24.04",   "vm2",  $ubuntu24_provisioning],
  [31841, "ubuntu24.04",      "bento/ubuntu-24.04",   "vm1",  $ubuntu24_provisioning],
  [31844, "ubuntu24.04-docs", "bento/ubuntu-24.04",   "vm2",  $ubuntu24_provisioning],
]

Vagrant.configure("2") do |config|
  # Disable sharing /vagrant with the host.
  config.vm.synced_folder ".", "/vagrant", disabled: true

  agents.each do |agent|
    # ID of the machine. Must be unique.
    vmid = "#{agent[1]}-#{agent[0]}"

    config.vm.define "agent-#{vmid}" do |node|
      node.vm.box = agent[2]
      node.vm.box_architecture = agent[1].include?("-i386") ? "i386" : "amd64"
      node.vm.hostname = vmid.delete "^0-9A-Za-z-"
      node.vm.network "forwarded_port", guest: 22, host: agent[0], id: "ssh"

      node.vm.provider "virtualbox" do |vb|
        vb.name = "agent-#{vmid}"

        cpus = agent[1].include?("-docs") ? 2 : 3
        vb.cpus = cpus
        vb.memory = 2048 * cpus
        vb.default_nic_type = "virtio"

        # Disable host I/O caching.
        # https://www.virtualbox.org/manual/ch05.html#iocaching
        vb.customize "pre-boot", ["storagectl", :id, "--name", "SATA Controller", "--hostiocache", "off"]

        # Specify the folder where VirtualBox will store the machine data.
        # Warning: this is a global setting, so make sure you create one machine at a time.
        # https://www.virtualbox.org/manual/ch10.html#vboxconfigdata-machine-folder
        folder = agent[3].nil? ? "default" : File.join("", agent[3], "jenkins")
        vb.customize "pre-import", ["setproperty", "machinefolder", folder]
      end

      node.vm.provision "shell", inline: agent[4], reboot: true

      node.vm.provision "shell", inline: <<~SHELL
        useradd --create-home --shell /bin/bash jenkins
        echo 'jenkins ALL=(ALL) NOPASSWD: ALL' >/etc/sudoers.d/jenkins
        chmod 440 /etc/sudoers.d/jenkins

        mkdir -pv /home/jenkins/.ssh
        echo '#{authorized_keys.join("\n")}' >>/home/jenkins/.ssh/authorized_keys
        chown -cR jenkins: /home/jenkins/.ssh
        chmod -c 700 /home/jenkins/.ssh
        chmod -c 600 /home/jenkins/.ssh/authorized_keys

        cat <<EOF >/etc/ssh/sshd_config.d/auth.conf
        ChallengeResponseAuthentication no
        GSSAPIAuthentication no
        KbdInteractiveAuthentication no
        KerberosAuthentication no
        PasswordAuthentication no
        PubkeyAuthentication yes
        PermitRootLogin no
        EOF
        systemctl reload-or-restart ssh.service || systemctl reload-or-restart sshd.service

        echo -e "\\U1F511 SSH host key: $(cut -d' ' -f-2 /etc/ssh/ssh_host_ed25519_key.pub)"
      SHELL
    end
  end
end
